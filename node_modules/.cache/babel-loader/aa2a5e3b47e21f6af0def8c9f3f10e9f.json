{"ast":null,"code":"var _jsxFileName = \"/home/pocho/Documents/U/2020-1/TallerI/Tarea1/RickandMortyWiki/src/components/Episode.js\";\nimport React from 'react';\n\nconst EpisodeInfo = props => {\n  async function getCharAsync(url) {\n    let response = await fetch(url);\n    let data = await response.json();\n    return data;\n  }\n\n  const {\n    name,\n    air_date,\n    episode,\n    characters\n  } = props.episode; // const charNames = characters.forEach(c => getCharAsync(c)\n  // .then(data => ({id: result.id, name: result.name, url: c})))\n\n  const charNames = characters.forEach(element => {\n    getUserAsync(element).then(data => ({\n      id: result.id,\n      name: result.name,\n      url: c\n    }));\n  }); // characters.forEach((c) =>  fetch(c)\n  //                             .then(response => response.json())\n  //                             .then(result => charNames.push({id: result.id, name: result.name, url: c})))\n  // const charNames =   characters.forEach((c) =>  fetch(c)\n  //                         .then(response => response.json())\n  //                         .then(result => ({id: result.id, name: result.name, url: c})));\n\n  function handle_click(e) {\n    e.preventDefault();\n    props.searchData(\"character_id\", \"1\", \"10\");\n  } // const listItems = charNames.map((a) =>  <li>{a}</li>);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"Name: \", name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Date: \", air_date, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Code: \", episode, \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, console.log(characters), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Characters: \"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, characters.map(c => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    onClick: handle_click,\n    className: \"card-text \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 37\n    }\n  }, \" \", c, \" \"))))))));\n};\n\nexport default EpisodeInfo;","map":{"version":3,"sources":["/home/pocho/Documents/U/2020-1/TallerI/Tarea1/RickandMortyWiki/src/components/Episode.js"],"names":["React","EpisodeInfo","props","getCharAsync","url","response","fetch","data","json","name","air_date","episode","characters","charNames","forEach","element","getUserAsync","then","id","result","c","handle_click","e","preventDefault","searchData","console","log","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3B,iBAAeC,YAAf,CAA4BC,GAA5B,EACA;AACE,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA1B;AACA,QAAIG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,WAAOD,IAAP;AACD;;AAED,QAAM;AAACE,IAAAA,IAAD;AAAOC,IAAAA,QAAP;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA;AAA1B,MAAwCV,KAAK,CAACS,OAApD,CAT2B,CAW3B;AACA;;AAEA,QAAME,SAAS,GAAGD,UAAU,CAACE,OAAX,CAAmBC,OAAO,IAAI;AAC5CC,IAAAA,YAAY,CAACD,OAAD,CAAZ,CACDE,IADC,CACIV,IAAI,KAAK;AAACW,MAAAA,EAAE,EAAEC,MAAM,CAACD,EAAZ;AAAgBT,MAAAA,IAAI,EAAEU,MAAM,CAACV,IAA7B;AAAmCL,MAAAA,GAAG,EAAEgB;AAAxC,KAAL,CADR;AAEH,GAHiB,CAAlB,CAd2B,CAmB3B;AACA;AACA;AAEA;AACA;AACA;;AAEA,WAASC,YAAT,CAAuBC,CAAvB,EAA0B;AACtBA,IAAAA,CAAC,CAACC,cAAF;AAEArB,IAAAA,KAAK,CAACsB,UAAN,CAAiB,cAAjB,EAAiC,GAAjC,EAAsC,IAAtC;AACH,GA/B0B,CAgC3B;;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAgCf,IAAhC,MADJ,eAEI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAgCC,QAAhC,MAFJ,eAGI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAgCC,OAAhC,MAHJ,CADJ,CADJ,CADJ,eAUI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKc,OAAO,CAACC,GAAR,CAAYd,UAAZ,CAJL,eAKI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,UAAU,CAACe,GAAX,CAAeP,CAAC,iBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,IAAI,EAAE,GAAT;AAAa,IAAA,OAAO,EAAEC,YAAtB;AAAoC,IAAA,SAAS,EAAC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6DD,CAA7D,MAAJ,CADH,CADL,CANJ,CADJ,CADJ,CAVJ,CADJ;AA+BH,CAhED;;AAkEA,eAAenB,WAAf","sourcesContent":["import React from 'react';\n\nconst EpisodeInfo = (props) => {\n\n    async function getCharAsync(url)\n    {\n      let response = await fetch(url);\n      let data = await response.json()\n      return data;\n    }\n\n    const {name, air_date, episode, characters} = props.episode;\n\n    // const charNames = characters.forEach(c => getCharAsync(c)\n    // .then(data => ({id: result.id, name: result.name, url: c})))\n\n    const charNames = characters.forEach(element => {\n        getUserAsync(element)\n      .then(data => ({id: result.id, name: result.name, url: c}))\n    });\n\n    // characters.forEach((c) =>  fetch(c)\n    //                             .then(response => response.json())\n    //                             .then(result => charNames.push({id: result.id, name: result.name, url: c})))\n\n    // const charNames =   characters.forEach((c) =>  fetch(c)\n    //                         .then(response => response.json())\n    //                         .then(result => ({id: result.id, name: result.name, url: c})));\n\n    function handle_click (e) {\n        e.preventDefault();\n\n        props.searchData(\"character_id\", \"1\", \"10\");\n    }\n    // const listItems = charNames.map((a) =>  <li>{a}</li>);\n    return (\n        <div className=\"row\">\n            <div className=\"col-4\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <p className=\"card-text\">Name: {name} </p>\n                        <p className=\"card-text\">Date: {air_date} </p>\n                        <p className=\"card-text\">Code: {episode} </p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        {/* {console.log(characters)} */}\n                        {/* {console.log(charNames[0])} */}\n                        {/* {console.log(charNames[0])} */}\n                        {console.log(characters)}\n                        <p className=\"card-text\">Characters: </p>\n                        <ul>\n                            {characters.map(c =>\n                                <li><a href= \"#\" onClick={handle_click} className=\"card-text \"> {c} </a></li>\n                            )}\n                            {/* <li><a onClick={handle_click}>\n                                Click me! </a></li> */}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EpisodeInfo;"]},"metadata":{},"sourceType":"module"}