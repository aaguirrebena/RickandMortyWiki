{"ast":null,"code":"var _jsxFileName = \"/home/pocho/Documents/U/2020-1/TallerI/Tarea1/RickandMortyWiki/src/components/Episode.js\";\nimport React from 'react';\n\nconst EpisodeInfo = props => {\n  async function getCharAsync(url) {\n    let response = await fetch(url);\n    let result = await response.json();\n    return result;\n  }\n\n  const {\n    name,\n    air_date,\n    episode,\n    characters\n  } = props.episode; // const charNames = characters.forEach(c => getCharAsync(c)\n  // .then(data => ({id: result.id, name: result.name, url: c})))\n\n  const charNames = [];\n  characters.forEach(char => {\n    getCharAsync(char).then(result => charNames.push(result.name));\n  });\n  charNames.forEach(c => {\n    console.log(charNames);\n    console.log(c);\n  }); // {console.log(charNames)}\n  // characters.forEach((c) =>  fetch(c)\n  //                             .then(response => response.json())\n  //                             .then(result => charNames.push({id: result.id, name: result.name, url: c})))\n  // const charNames =   characters.forEach((c) =>  fetch(c)\n  //                         .then(response => response.json())\n  //                         .then(result => ({id: result.id, name: result.name, url: c})));\n\n  function handle_click(e) {\n    e.preventDefault();\n    props.searchData(\"character_id\", \"1\", \"10\");\n  } // const listItems = charNames.map((a) =>  <li>{a}</li>);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"Name: \", name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, \"Date: \", air_date, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \"Code: \", episode, \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"Characters: \"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, characters.map(c => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 37\n    }\n  }, \" \", c.name, \" \"))))))));\n};\n\nexport default EpisodeInfo;","map":{"version":3,"sources":["/home/pocho/Documents/U/2020-1/TallerI/Tarea1/RickandMortyWiki/src/components/Episode.js"],"names":["React","EpisodeInfo","props","getCharAsync","url","response","fetch","result","json","name","air_date","episode","characters","charNames","forEach","char","then","push","c","console","log","handle_click","e","preventDefault","searchData","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3B,iBAAeC,YAAf,CAA4BC,GAA5B,EACA;AACE,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA1B;AACA,QAAIG,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOD,MAAP;AACD;;AAED,QAAM;AAACE,IAAAA,IAAD;AAAOC,IAAAA,QAAP;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA;AAA1B,MAAwCV,KAAK,CAACS,OAApD,CAT2B,CAW3B;AACA;;AAEA,QAAME,SAAS,GAAI,EAAnB;AAEAD,EAAAA,UAAU,CAACE,OAAX,CAAmBC,IAAI,IAAI;AACvBZ,IAAAA,YAAY,CAACY,IAAD,CAAZ,CACDC,IADC,CACIT,MAAM,IAAIM,SAAS,CAACI,IAAV,CAAeV,MAAM,CAACE,IAAtB,CADd;AAC2C,GAF/C;AAIAI,EAAAA,SAAS,CAACC,OAAV,CAAkBI,CAAC,IAAI;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,GAHD,EApB2B,CAwB3B;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,WAASG,YAAT,CAAuBC,CAAvB,EAA0B;AACtBA,IAAAA,CAAC,CAACC,cAAF;AAEArB,IAAAA,KAAK,CAACsB,UAAN,CAAiB,cAAjB,EAAiC,GAAjC,EAAsC,IAAtC;AACH,GAtC0B,CAuC3B;;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAgCf,IAAhC,MADJ,eAEI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAgCC,QAAhC,MAFJ,eAGI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAgCC,OAAhC,MAHJ,CADJ,CADJ,CADJ,eAUI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,UAAU,CAACa,GAAX,CAAeP,CAAC,iBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA4BA,CAAC,CAACT,IAA9B,MAAJ,CADH,CADL,CANJ,CADJ,CADJ,CAVJ,CADJ;AA+BH,CAvED;;AAyEA,eAAeR,WAAf","sourcesContent":["import React from 'react';\n\nconst EpisodeInfo = (props) => {\n\n    async function getCharAsync(url)\n    {\n      let response = await fetch(url);\n      let result = await response.json()\n      return result;\n    }\n\n    const {name, air_date, episode, characters} = props.episode;\n\n    // const charNames = characters.forEach(c => getCharAsync(c)\n    // .then(data => ({id: result.id, name: result.name, url: c})))\n\n    const charNames =  [];\n\n    characters.forEach(char => {\n        getCharAsync(char)\n      .then(result => charNames.push(result.name))});\n\n    charNames.forEach(c => {\n        console.log(charNames)\n        console.log(c)\n    });\n    // {console.log(charNames)}\n\n    // characters.forEach((c) =>  fetch(c)\n    //                             .then(response => response.json())\n    //                             .then(result => charNames.push({id: result.id, name: result.name, url: c})))\n\n    // const charNames =   characters.forEach((c) =>  fetch(c)\n    //                         .then(response => response.json())\n    //                         .then(result => ({id: result.id, name: result.name, url: c})));\n\n    function handle_click (e) {\n        e.preventDefault();\n\n        props.searchData(\"character_id\", \"1\", \"10\");\n    }\n    // const listItems = charNames.map((a) =>  <li>{a}</li>);\n    return (\n        <div className=\"row\">\n            <div className=\"col-4\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <p className=\"card-text\">Name: {name} </p>\n                        <p className=\"card-text\">Date: {air_date} </p>\n                        <p className=\"card-text\">Code: {episode} </p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        {/* {console.log(characters)} */}\n                        {/* {console.log(charNames[0])} */}\n                        {/* {console.log(charNames)} */}\n                        {/* {console.log(characters)} */}\n                        <p className=\"card-text\">Characters: </p>\n                        <ul>\n                            {characters.map(c =>\n                                <li><p className=\"card-text \"> {c.name} </p></li>\n                            )}\n                            {/* <li><a onClick={handle_click}>\n                                Click me! </a></li> */}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EpisodeInfo;"]},"metadata":{},"sourceType":"module"}