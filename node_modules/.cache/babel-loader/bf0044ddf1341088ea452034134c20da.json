{"ast":null,"code":"var _jsxFileName = \"/home/pocho/Documents/U/2020-1/TallerI/Tarea1/RickandMortyWiki/src/components/Character.js\";\nimport React from 'react';\n\nconst CharInfo = props => {\n  const {\n    url,\n    image,\n    name,\n    species,\n    status,\n    type,\n    gender,\n    origin,\n    location,\n    episode\n  } = props.character;\n\n  async function getCharAsync(url) {\n    let response = await fetch(url);\n    let result = await response.json(); //   console.log(result)\n\n    return result;\n  }\n\n  const episode_name = episode.forEach(ep => {\n    getCharAsync(ep).then(result => ({\n      id: result.id,\n      name: result.name\n    }));\n  });\n\n  function handle_episode(ids) {\n    props.searchData(\"episode_id\", \"1\", `${ids}`);\n  }\n\n  function handle_origin(e) {\n    e.preventDefault();\n    props.searchData(origin.name, \"1\", \"\");\n  }\n\n  function handle_location(e) {\n    e.preventDefault();\n    props.searchData(location.name, \"1\", \"\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: name,\n    className: \"card-img-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"Name: \", name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Species: \", species, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Status: \", status, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Type: \", type, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"Gender: \", gender, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    onClick: handle_origin,\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 28\n    }\n  }, \"Origin: \", origin.name, \" \")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    onClick: handle_location,\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 28\n    }\n  }, \"Location: \", location.name, \" \")), /*#__PURE__*/React.createElement(\"a\", {\n    href: image,\n    target: \"_blank\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"Character View \")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Episodes: \"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, episode.map(e => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    onClick: () => handle_episode(e.substr(-1)),\n    className: \"card-text \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 37\n    }\n  }, \" \", e, \" \"))))))));\n};\n\nexport default CharInfo;","map":{"version":3,"sources":["/home/pocho/Documents/U/2020-1/TallerI/Tarea1/RickandMortyWiki/src/components/Character.js"],"names":["React","CharInfo","props","url","image","name","species","status","type","gender","origin","location","episode","character","getCharAsync","response","fetch","result","json","episode_name","forEach","ep","then","id","handle_episode","ids","searchData","handle_origin","e","preventDefault","handle_location","map","substr"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst CharInfo = props => {\n\n    const {url, image, name, species, status, type, gender, origin, location, episode} = props.character;\n\n    async function getCharAsync(url)\n    {\n      let response = await fetch(url);\n      let result = await response.json()\n    //   console.log(result)\n      return result;\n    }\n    const episode_name = episode.forEach(ep => {\n        getCharAsync(ep)\n        .then(result => ({id: result.id, name: result.name}))});\n\n    function handle_episode (ids) {\n        props.searchData(\"episode_id\", \"1\", `${ids}`)\n\n    }\n\n    function handle_origin (e) {\n        e.preventDefault();\n\n        props.searchData(origin.name, \"1\", \"\")\n    }\n\n    function handle_location (e) {\n        e.preventDefault();\n\n        props.searchData(location.name, \"1\", \"\")\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-4\">\n                <div className=\"card\">\n                    <img src={image} alt={name} className=\"card-img-top\" />\n                    <div className=\"card-body\">\n                        <p className=\"card-text\">Name: {name} </p>\n                        <p className=\"card-text\">Species: {species} </p>\n                        <p className=\"card-text\">Status: {status} </p>\n                        <p className=\"card-text\">Type: {type} </p>\n                        <p className=\"card-text\">Gender: {gender} </p>\n                        <p><a href= \"#\" onClick={handle_origin} className=\"card-text\">Origin: {origin.name} </a></p>\n                        <p><a href= \"#\" onClick={handle_location} className=\"card-text\">Location: {location.name} </a></p>\n                        <a href={image} target=\"_blank\" className=\"btn btn-primary btn-block\">Character View </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <p className=\"card-text\">Episodes: </p>\n                        <ul>\n                            {episode.map(e =>\n                                <li><a href= \"#\" onClick={() => handle_episode(e.substr(-1))} className=\"card-text \"> {e} </a></li>\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CharInfo;"]},"metadata":{},"sourceType":"module"}