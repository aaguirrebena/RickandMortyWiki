{"ast":null,"code":"var _jsxFileName = \"/home/pocho/Documents/U/2020-1/TallerI/Tarea1/RickandMortyWiki/src/components/Character.js\";\nimport React, { useEffect, useState } from 'react';\n\nconst CharInfo = props => {\n  const {\n    image,\n    name,\n    species,\n    status,\n    type,\n    gender,\n    origin,\n    location,\n    episode\n  } = props.character;\n  const [episodesData, setEpisodesData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const promiseArray = episode.map(e => fetch(e).then(response => response.json()));\n    Promise.all(promiseArray).then(result => {\n      setEpisodesData(result);\n      setLoading(false);\n    });\n  }, [episode]);\n\n  function handle_episode(e, episode) {\n    e.preventDefault();\n    props.searchData(\"episode_id\", \"1\", episode.id);\n  }\n\n  function handle_origin(e) {\n    e.preventDefault();\n    props.searchData(origin.name, \"1\", \"\");\n  }\n\n  function handle_location(e) {\n    e.preventDefault();\n    props.searchData(location.name, \"1\", \"\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: name,\n    className: \"card-img-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"Name: \", name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Species: \", species, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Status: \", status, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Type: \", type, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"Gender: \", gender, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    onClick: handle_origin,\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 28\n    }\n  }, \"Origin: \", origin.name)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    onClick: handle_location,\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 28\n    }\n  }, \"Location: \", location.name, \" \")), /*#__PURE__*/React.createElement(\"a\", {\n    href: image,\n    target: \"_blank\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"Character View\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Episodes: \"), loading && \"LOADING...\", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, !loading && episodesData.map(episode => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    onClick: e => handle_episode(e, episode),\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  }, \" \", episode.name, \" \"))))))));\n};\n\nexport default CharInfo;","map":{"version":3,"sources":["/home/pocho/Documents/U/2020-1/TallerI/Tarea1/RickandMortyWiki/src/components/Character.js"],"names":["React","useEffect","useState","CharInfo","props","image","name","species","status","type","gender","origin","location","episode","character","episodesData","setEpisodesData","loading","setLoading","promiseArray","map","e","fetch","then","response","json","Promise","all","result","handle_episode","preventDefault","searchData","id","handle_origin","handle_location"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nconst CharInfo = props => {\n\n    const {image, name, species, status, type, gender, origin, location, episode} = props.character;\n\n    const [episodesData, setEpisodesData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const promiseArray = episode.map(e => fetch(e).then(response => response.json()));\n        Promise.all(promiseArray).then(result => {\n            setEpisodesData(result);\n            setLoading(false);\n        });\n    }, [episode]);\n\n    function handle_episode (e, episode) {\n        e.preventDefault();\n        props.searchData(\"episode_id\", \"1\", episode.id);\n    }\n\n    function handle_origin (e) {\n        e.preventDefault();\n\n        props.searchData(origin.name, \"1\", \"\");\n    }\n\n    function handle_location (e) {\n        e.preventDefault();\n\n        props.searchData(location.name, \"1\", \"\");\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-4\">\n                <div className=\"card\">\n                    <img src={image} alt={name} className=\"card-img-top\" />\n                    <div className=\"card-body\">\n                        <p className=\"card-text\">Name: {name} </p>\n                        <p className=\"card-text\">Species: {species} </p>\n                        <p className=\"card-text\">Status: {status} </p>\n                        <p className=\"card-text\">Type: {type} </p>\n                        <p className=\"card-text\">Gender: {gender} </p>\n                        <p><a href= \"#\" onClick={handle_origin} className=\"card-text\">Origin: {origin.name}</a></p>\n                        <p><a href= \"#\" onClick={handle_location} className=\"card-text\">Location: {location.name} </a></p>\n                        <a href={image} target=\"_blank\" className=\"btn btn-primary btn-block\">Character View</a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <p className=\"card-text\">Episodes: </p>\n                        {loading && \"LOADING...\"}\n                        <ul>\n                            {!loading &&\n                            episodesData.map(episode => (\n                                <li>\n                                    <a href=\"#\" onClick={e => handle_episode(e, episode)} className=\"card-text\"> {episode.name} </a>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CharInfo;"]},"metadata":{},"sourceType":"module"}