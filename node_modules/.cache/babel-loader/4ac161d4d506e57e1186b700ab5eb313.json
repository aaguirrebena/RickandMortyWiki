{"ast":null,"code":"var _jsxFileName = \"/home/pocho/Documents/U/2020-1/TallerI/Tarea1/RickandMortyWiki/src/components/Episode.js\";\nimport React from 'react';\n\nconst EpisodeInfo = props => {\n  async function asyncForEach(array, callback) {\n    for (let index = 0; index < array.length; index++) {\n      await callback(array[index], index, array);\n    }\n  }\n\n  const {\n    name,\n    air_date,\n    episode,\n    characters\n  } = props.episode;\n  const charNames = [];\n\n  const jejes = async () => {\n    await asyncForEach(characters, async character => {\n      await fetch(character);\n      console.log(character);\n    });\n    console.log('Done');\n  };\n\n  console.log(jejes); // characters.forEach((c) =>  fetch(c)\n  //                             .then(response => response.json())\n  //                             .then(result => charNames.push({id: result.id, name: result.name, url: c})))\n  // const charNames =   characters.forEach((c) =>  fetch(c)\n  //                         .then(response => response.json())\n  //                         .then(result => ({id: result.id, name: result.name, url: c})));\n\n  function handle_click(e) {\n    e.preventDefault();\n    props.searchData(\"character_id\", \"1\", \"10\");\n  } // const listItems = charNames.map((a) =>  <li>{a}</li>);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"Name: \", name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Date: \", air_date, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Code: \", episode, \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, \"Characters: \"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, characters.map(c => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    onClick: handle_click,\n    className: \"card-text \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 37\n    }\n  }, \" \", c, \" \"))))))));\n};\n\nexport default EpisodeInfo;","map":{"version":3,"sources":["/home/pocho/Documents/U/2020-1/TallerI/Tarea1/RickandMortyWiki/src/components/Episode.js"],"names":["React","EpisodeInfo","props","asyncForEach","array","callback","index","length","name","air_date","episode","characters","charNames","jejes","character","fetch","console","log","handle_click","e","preventDefault","searchData","map","c"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3B,iBAAeC,YAAf,CAA4BC,KAA5B,EAAmCC,QAAnC,EAA6C;AACzC,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,KAAK,CAACG,MAAlC,EAA0CD,KAAK,EAA/C,EAAmD;AACjD,YAAMD,QAAQ,CAACD,KAAK,CAACE,KAAD,CAAN,EAAeA,KAAf,EAAsBF,KAAtB,CAAd;AACD;AACF;;AAEH,QAAM;AAACI,IAAAA,IAAD;AAAOC,IAAAA,QAAP;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA;AAA1B,MAAwCT,KAAK,CAACQ,OAApD;AACA,QAAME,SAAS,GAAG,EAAlB;;AACA,QAAMC,KAAK,GAAG,YAAY;AACtB,UAAMV,YAAY,CAACQ,UAAD,EAAa,MAAOG,SAAP,IAAqB;AAClD,YAAMC,KAAK,CAACD,SAAD,CAAX;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACD,KAHiB,CAAlB;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,GANH;;AAOED,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAjByB,CAmB3B;AACA;AACA;AAEA;AACA;AACA;;AAEA,WAASK,YAAT,CAAuBC,CAAvB,EAA0B;AACtBA,IAAAA,CAAC,CAACC,cAAF;AAEAlB,IAAAA,KAAK,CAACmB,UAAN,CAAiB,cAAjB,EAAiC,GAAjC,EAAsC,IAAtC;AACH,GA/B0B,CAgC3B;;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAgCb,IAAhC,MADJ,eAEI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAgCC,QAAhC,MAFJ,eAGI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAgCC,OAAhC,MAHJ,CADJ,CADJ,CADJ,eAUI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,UAAU,CAACW,GAAX,CAAeC,CAAC,iBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,IAAI,EAAE,GAAT;AAAa,IAAA,OAAO,EAAEL,YAAtB;AAAoC,IAAA,SAAS,EAAC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6DK,CAA7D,MAAJ,CADH,CADL,CALJ,CADJ,CADJ,CAVJ,CADJ;AA8BH,CA/DD;;AAiEA,eAAetB,WAAf","sourcesContent":["import React from 'react';\n\nconst EpisodeInfo = (props) => {\n\n    async function asyncForEach(array, callback) {\n        for (let index = 0; index < array.length; index++) {\n          await callback(array[index], index, array);\n        }\n      }\n\n    const {name, air_date, episode, characters} = props.episode;\n    const charNames = []\n    const jejes = async () => {\n        await asyncForEach(characters, async (character) => {\n          await fetch(character);\n          console.log(character);\n        });\n        console.log('Done');\n      }\n      console.log(jejes)\n\n    // characters.forEach((c) =>  fetch(c)\n    //                             .then(response => response.json())\n    //                             .then(result => charNames.push({id: result.id, name: result.name, url: c})))\n\n    // const charNames =   characters.forEach((c) =>  fetch(c)\n    //                         .then(response => response.json())\n    //                         .then(result => ({id: result.id, name: result.name, url: c})));\n\n    function handle_click (e) {\n        e.preventDefault();\n\n        props.searchData(\"character_id\", \"1\", \"10\");\n    }\n    // const listItems = charNames.map((a) =>  <li>{a}</li>);\n    return (\n        <div className=\"row\">\n            <div className=\"col-4\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <p className=\"card-text\">Name: {name} </p>\n                        <p className=\"card-text\">Date: {air_date} </p>\n                        <p className=\"card-text\">Code: {episode} </p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        {/* {console.log(characters)} */}\n                        {/* {console.log(charNames[0])} */}\n                        {/* {console.log(charNames[0])} */}\n                        <p className=\"card-text\">Characters: </p>\n                        <ul>\n                            {characters.map(c =>\n                                <li><a href= \"#\" onClick={handle_click} className=\"card-text \"> {c} </a></li>\n                            )}\n                            {/* <li><a onClick={handle_click}>\n                                Click me! </a></li> */}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EpisodeInfo;"]},"metadata":{},"sourceType":"module"}