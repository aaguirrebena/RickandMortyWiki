{"ast":null,"code":"var _jsxFileName = \"/home/pocho/Documents/U/2020-1/TallerI/Tarea0/example/example/src/components/Episode.js\";\nimport React from 'react';\n\nconst EpisodeInfo = props => {\n  const {\n    name,\n    air_date,\n    episode,\n    characters\n  } = props.episode; // Where we're fetching data from\n\n  characters.map(c => fetch(c).then(response => response.json()).then(data => this.setChars({\n    users: data.name\n  }))); // We get the API response and receive data in JSON format...\n  // ...then we update the users state\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, \"Name: \", name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, \"Date: \", air_date, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, \"Code: \", episode, \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, \"Characters: \"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, characters.map(c => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: c,\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 37\n    }\n  }, \" \", c, \" \"))))))));\n};\n\nexport default EpisodeInfo;","map":{"version":3,"sources":["/home/pocho/Documents/U/2020-1/TallerI/Tarea0/example/example/src/components/Episode.js"],"names":["React","EpisodeInfo","props","name","air_date","episode","characters","map","c","fetch","then","response","json","data","setChars","users"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAMA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAG3B,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,QAAP;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA;AAA1B,MAAwCJ,KAAK,CAACG,OAApD,CAH2B,CAI/B;;AACIC,EAAAA,UAAU,CAACC,GAAX,CAAeC,CAAC,IACZC,KAAK,CAACD,CAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IACN,KAAKC,QAAL,CAAc;AACdC,IAAAA,KAAK,EAAEF,IAAI,CAACV;AADE,GAAd,CAHJ,CADJ,EAL2B,CAarB;AACA;;AAEN,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAgCA,IAAhC,MADJ,eAEI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAgCC,QAAhC,MAFJ,eAGI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAgCC,OAAhC,MAHJ,CADJ,CADJ,CADJ,eAUI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCC,UAAU,CAACC,GAAX,CAAeC,CAAC,iBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,IAAI,EAAEA,CAAT;AAAY,IAAA,SAAS,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoCA,CAApC,MAAJ,CADP,CADD,CAHJ,CADJ,CADJ,CAVJ,CADJ;AA0BH,CA1CD;;AA4CA,eAAeP,WAAf","sourcesContent":["import React from 'react';\n\ninterface Chars {\n    names : []\n}\n\nconst EpisodeInfo = (props) => {\n\n\n    const {name, air_date, episode, characters} = props.episode;\n// Where we're fetching data from\n    characters.map(c =>\n        fetch(c)\n        .then(response => response.json())\n        .then(data =>\n            this.setChars({\n            users: data.name,\n            })\n        ))\n          // We get the API response and receive data in JSON format...\n          // ...then we update the users state\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-4\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <p className=\"card-text\">Name: {name} </p>\n                        <p className=\"card-text\">Date: {air_date} </p>\n                        <p className=\"card-text\">Code: {episode} </p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        {/* {console.log(listItems)} */}\n                        <p className=\"card-text\">Characters: </p>\n                        <ul>\n                        {characters.map(c =>\n                                <li><a href={c} className=\"card-text\"> {c} </a></li>\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EpisodeInfo;"]},"metadata":{},"sourceType":"module"}